name: Korean Word of the Day PR

on:
  schedule:
    - cron: '0 0 * * *'  # Run at midnight UTC every day
  workflow_dispatch:  # Allow manual triggering for testing

jobs:
  create-word-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_GITHUB }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Fetch Korean word of the day
        run: |
          python .github/scripts/get_korean_word.py
          echo "KOREAN_WORD=$(cat korean_word.txt)" >> $GITHUB_ENV
          echo "MEANING=$(cat korean_meaning.txt)" >> $GITHUB_ENV
          # Save today's date in a consistent format
          echo "TODAY=$(date +%Y-%m-%d)" >> $GITHUB_ENV
        
      - name: Create new branch
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git checkout -b word-of-the-day-${{ env.TODAY }}
          
      - name: Update word file
        run: |
          echo "${{ env.KOREAN_WORD }} - ${{ env.MEANING }}" > current_word.md
          # Add date to the file for clarity
          echo "Date: ${{ env.TODAY }}" >> current_word.md
          git add current_word.md
          git commit -m "Update Korean word of the day for ${{ env.TODAY }}"
          # Push using PAT authentication
          git push -f https://${{ secrets.PAT_GITHUB }}@github.com/${{ github.repository }}.git HEAD:word-of-the-day-${{ env.TODAY }}
      
      # First close any PRs that match our naming pattern but aren't today's
      - name: Close previous PRs
        run: |
          echo "Today's date: ${{ env.TODAY }}"
          REPO_FULLNAME="${{ github.repository }}"
          
          # Get list of open PRs
          PR_LIST=$(curl -s -H "Authorization: token ${{ secrets.PAT_GITHUB }}" \
                    -H "Accept: application/vnd.github.v3+json" \
                    https://api.github.com/repos/$REPO_FULLNAME/pulls?state=open)
          
          # Loop through PRs and close the ones that aren't today's
          echo "$PR_LIST" | jq -c '.[]' | while read PR; do
            PR_NUMBER=$(echo "$PR" | jq -r '.number')
            PR_TITLE=$(echo "$PR" | jq -r '.title')
            PR_CREATED_AT=$(echo "$PR" | jq -r '.created_at')
            
            echo "Checking PR #$PR_NUMBER: $PR_TITLE (created: $PR_CREATED_AT)"
            
            # Only close if it's NOT a PR from today (check branch name rather than title)
            PR_HEAD_REF=$(echo "$PR" | jq -r '.head.ref')
            if [[ "$PR_HEAD_REF" != *"${{ env.TODAY }}"* ]]; then
              echo "Closing PR #$PR_NUMBER because it's not today's PR"
              
              curl -X PATCH \
                -H "Authorization: token ${{ secrets.PAT_GITHUB }}" \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/repos/$REPO_FULLNAME/pulls/$PR_NUMBER \
                -d '{"state": "closed"}'
            else
              echo "Keeping PR #$PR_NUMBER open"
            fi
          done
          
      # Then create today's PR (after closing old ones)
      - name: Create Today's PR
        run: |
          REPO_FULLNAME="${{ github.repository }}"
          # Use a much shorter title format
          PR_TITLE="${{ env.KOREAN_WORD }} - ${{ env.TODAY }}"
          PR_BODY="Learn a new Korean word today: **${{ env.KOREAN_WORD }}** - ${{ env.MEANING }}"
          
          echo "Creating PR with title: $PR_TITLE"
          
          # Create PR using GitHub API with PAT authentication
          curl -X POST \
            -H "Authorization: token ${{ secrets.PAT_GITHUB }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$REPO_FULLNAME/pulls \
            -d '{
              "title": "'"$PR_TITLE"'",
              "body": "'"$PR_BODY"'",
              "head": "word-of-the-day-'"${{ env.TODAY }}"'",
              "base": "main"
            }'
